#!/usr/bin/env python3

## Based on https://guardicore.zendesk.com/hc/en-us/articles/360015818659-HOWTO-Network-Logs-API-Endpoint-Guide
import sys
import threading, signal
import os

import gc_config.default_config as default_cfg
import gc_config.version as gc_version
import modules.argsParser as args
import modules.generic as generic
import modules.aka_log as aka_log
import modules.events as gc_events


stopEvent = threading.Event()


def sigterm_handler(signum, frame):
    """
    Upon SIGTERM, we signal any other pending activities
    to stop right away
    """
    aka_log.log.debug(f"SIGTERM ({signum}) detected, setting stopEvent")
    stopEvent.set()


def control_break_handler():
    """
    Upon CTRL + C, we signal any other pending activities
    to stop right away
    """
    aka_log.log.debug("Control+C detected, setting stopEvent")
    stopEvent.set()


def main():
    signal.signal(signal.SIGTERM, sigterm_handler)

    my_args = args.init()



    # Load the LOG system
    aka_log.init(my_args.loglevel, gc_version.__tool_name_short__)

    # Show Version
    if my_args.version:
        generic.version()


    # Pre Flight checks
    try:
        confivalues=[]
        edgerc_data = {}


        if os.environ.get("CENTRA_MANAGEMENT_HOSTNAME"):
            edgerc_data["gc_hostname"] = os.environ.get("CENTRA_MANAGEMENT_HOSTNAME")
        else:
            confivalues.append("gc_hostname")

        if os.environ.get("CENTRA_MANAGEMENT_PORT"):
            edgerc_data["gc_port"] = int(os.environ.get("CENTRA_MANAGEMENT_PORT"))
        else:
            edgerc_data["gc_port"] = 443

        if os.environ.get("CENTRA_MANAGEMENT_USERNAME"):
            edgerc_data["gc_username"] = os.environ.get("CENTRA_MANAGEMENT_USERNAME")
        else:
            confivalues.append("gc_username")

        if os.environ.get("CENTRA_MANAGEMENT_PASSWORD"):
            edgerc_data["gc_password"] = os.environ.get("CENTRA_MANAGEMENT_PASSWORD")
        else:
            confivalues.append("gc_password")


        if my_args.event_action:
            if confivalues:
                edgerc_data = generic.edgerc_reader(configfile=my_args.credentials_file,
                                      configsection=my_args.credentials_file_section,
                                      configvalues=confivalues)

    except:
        print(f"Try akamai-gc --help")

    try:
        if my_args.event_action == "netlog":
            gc_events.netlog(given_args=my_args, gc_edgerc=edgerc_data)
        elif my_args.event_action == "incident":
            gc_events.incident(given_args=my_args, gc_edgerc=edgerc_data)
        elif my_args.event_action == "agent":
            gc_events.agent(given_args=my_args, gc_edgerc=edgerc_data)
        elif my_args.event_action == "system":
            gc_events.system(given_args=my_args, gc_edgerc=edgerc_data)
        elif my_args.event_action == "audit":
            gc_events.audit(given_args=my_args, gc_edgerc=edgerc_data)
        else:
            print("Nothing to do.")
            sys.exit(1)
    except Exception as e:
        print(e)
        sys.exit(1)


    if stopEvent.is_set():
        sys.exit(100)

    signal.signal(signal.SIGINT, sigterm_handler)

if __name__ == "__main__":
    main()

# EOF